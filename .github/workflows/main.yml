name: Main backend workflow

on:
  push:
    branches:
      - main

jobs:
  # tests:
  #   name: Running backend tests
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:14
  #       env:
  #         POSTGRES_USER: postgres_user
  #         POSTGRES_PASSWORD: postgres_password
  #         POSTGRES_DB: postgres
  #       ports:
  #         - 5432:5432
  #       options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
  #   steps:
  #   - name: Check out code
  #     uses: actions/checkout@v3

  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: 3.10.12

  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip 
  #       pip install flake8==6.0.0
  #       pip install -r ./backend/requirements.txt 

  #   - name: Test with flake8 tests
  #     env:
  #       POSTGRES_USER: postgres_user
  #       POSTGRES_PASSWORD: postgres_password
  #       POSTGRES_DB: postgres
  #       DB_HOST: localhost
  #       DB_PORT: 5432
  #       SECRET_KEY: some-test-key-not-good-for-prod
  #       DEBUG: True
  #       ALLOWED_HOSTS: 127.0.0.1,localhost
  #     run: |
  #       python -m flake8 backend/

  build_backend_and_push_to_docker_hub:
    name: Push backend Docker image to DockerHub
    runs-on: ubuntu-latest
    # needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: telegrambotsmarketplace/marketplace_backend:latest

  # build_frontend_and_push_to_docker_hub:
  #   name: Push frontend Docker image to DockerHub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Login to Docker
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Push to DockerHub
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./frontend/
  #         push: true
  #         tags: <USERNAME>/marketplace_frontend:latest

  build_nginx_and_push_to_docker_hub:
    name: Push nginx Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: telegrambotsmarketplace/marketplace_nginx:latest

  deploy:
    name: Application deployment
    runs-on: ubuntu-latest
    needs:
      - build_backend_and_push_to_docker_hub
      # - build_frontend_and_push_to_docker_hub
      - build_nginx_and_push_to_docker_hub
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yml"
          target: "marketplace"

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd marketplace
            sudo docker compose pull
            sudo docker compose down
            sudo docker compose up -d
            sudo docker compose exec backend python manage.py migrate
            sudo docker compose exec backend python manage.py collectstatic
            sudo docker compose exec backend cp -r /app/collected_static/. /backend_static/static/

  # send_message:
  #   name: Send message in telegram
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #     - name: Send message
  #       uses: appleboy/telegram-action@master
  #       with:
  #         to: ${{ secrets.TELEGRAM_TO }}
  #         token: ${{ secrets.TELEGRAM_TOKEN }}
  #         message: Деплой Foodgram успешно выполнен!
